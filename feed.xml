<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="https://blog.eucalypto.de/feed.xml" rel="self" type="application/atom+xml" /><link href="https://blog.eucalypto.de/" rel="alternate" type="text/html" /><updated>2019-11-24T19:50:33+01:00</updated><id>https://blog.eucalypto.de/feed.xml</id><title type="html">Eucalypto’s Explorations</title><subtitle>Hi there, this is Viktor Papara and what you see is my professional blog.</subtitle><entry><title type="html">So, I’ve started the 100 days of code challenge with PyBites</title><link href="https://blog.eucalypto.de/2019/11/20/100-days-of-code-pybites.html" rel="alternate" type="text/html" title="So, I've started the 100 days of code challenge with PyBites" /><published>2019-11-20T11:00:00+01:00</published><updated>2019-11-20T11:00:00+01:00</updated><id>https://blog.eucalypto.de/2019/11/20/100-days-of-code-pybites</id><content type="html" xml:base="https://blog.eucalypto.de/2019/11/20/100-days-of-code-pybites.html">&lt;p&gt;So, I’ve started the 100 days of code challenge with PyBites. I really enjoy doing PyBites and this challenge is a nice push towards doing it regularly.&lt;/p&gt;

&lt;p&gt;You can see my progress here: https://codechalleng.es/100days/eucalypto/4862&lt;/p&gt;

&lt;p&gt;Right now I’m at day 27. Which is quite impressive for me but if you are reading this in the future, you can see if I managed to keep up until the 100 days!&lt;/p&gt;

&lt;p&gt;This is also a good reason to use Twitter! I’m posting there each day to have some kind of open record.&lt;/p&gt;</content><author><name></name></author><category term="python3" /><summary type="html">So, I’ve started the 100 days of code challenge with PyBites. I really enjoy doing PyBites and this challenge is a nice push towards doing it regularly.</summary></entry><entry><title type="html">Welcome to Jekyll! – Again!</title><link href="https://blog.eucalypto.de/jekyll/update/2019/09/27/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll! -- Again!" /><published>2019-09-27T19:15:44+02:00</published><updated>2019-09-27T19:15:44+02:00</updated><id>https://blog.eucalypto.de/jekyll/update/2019/09/27/welcome-to-jekyll</id><content type="html" xml:base="https://blog.eucalypto.de/jekyll/update/2019/09/27/welcome-to-jekyll.html">&lt;p&gt;Over the last several years I’ve not updated my blog because I starded using &lt;a href=&quot;https://dynalist.io/&quot;&gt;Dynalist&lt;/a&gt;. Its capable list creation and navigation made it feel natural to organize my thoughts and knowledge in a deep tree structure. This blog overlaps with this use-case because I started it to take notes for my future self.&lt;/p&gt;

&lt;p&gt;Now I’m re-activating this blog to show the world what I’m up to. To give back at least some knowledge and insight that I gained by reading the wonderful blogs and tutorials of today.&lt;/p&gt;</content><author><name></name></author><summary type="html">Over the last several years I’ve not updated my blog because I starded using Dynalist. Its capable list creation and navigation made it feel natural to organize my thoughts and knowledge in a deep tree structure. This blog overlaps with this use-case because I started it to take notes for my future self.</summary></entry><entry><title type="html">Command Line Goodies</title><link href="https://blog.eucalypto.de/2016/10/21/command_line.html" rel="alternate" type="text/html" title="Command Line Goodies" /><published>2016-10-21T19:53:00+02:00</published><updated>2016-10-21T19:53:00+02:00</updated><id>https://blog.eucalypto.de/2016/10/21/command_line</id><content type="html" xml:base="https://blog.eucalypto.de/2016/10/21/command_line.html">&lt;h1 id=&quot;watch-logfiles&quot;&gt;Watch Logfiles&lt;/h1&gt;

&lt;p&gt;Watch a text file as it grows:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tail -f logfile.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;print-out-iso-date-format&quot;&gt;Print out iso date format&lt;/h1&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;date --iso-8601=minutes
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;produces for example &lt;code class=&quot;highlighter-rouge&quot;&gt;2016-10-21T19:53+02:00&lt;/code&gt;&lt;/p&gt;</content><author><name>eucalypto</name></author><category term="linux" /><category term="ssh" /><category term="command-line" /><summary type="html">Watch Logfiles</summary></entry><entry><title type="html">SSH Tips</title><link href="https://blog.eucalypto.de/2016/10/10/ssh.html" rel="alternate" type="text/html" title="SSH Tips" /><published>2016-10-10T21:19:32+02:00</published><updated>2016-10-10T21:19:32+02:00</updated><id>https://blog.eucalypto.de/2016/10/10/ssh</id><content type="html" xml:base="https://blog.eucalypto.de/2016/10/10/ssh.html">&lt;h2 id=&quot;run-ssh-agent-in-remote-login&quot;&gt;Run ssh-agent in remote login&lt;/h2&gt;

&lt;p&gt;When you log into a machine with SSH and want to use a SSH key to do further
stuff, like managing a remote git repository, you may have to&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;eval&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;ssh-agent &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;
ssh-add ~/.ssh/your_ssh_id&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;according to
&lt;a href=&quot;http://serverfault.com/questions/672346/straight-forward-way-to-run-ssh-agent-and-ssh-add-on-login-via-ssh&quot;&gt;this site&lt;/a&gt;. Then the shell remembers your SSH key as long as it is open.&lt;/p&gt;</content><author><name>eucalypto</name></author><category term="linux" /><category term="ssh" /><category term="command-line" /><summary type="html">Run ssh-agent in remote login</summary></entry><entry><title type="html">CentOS 7 Tips</title><link href="https://blog.eucalypto.de/2016/03/15/centos.html" rel="alternate" type="text/html" title="CentOS 7 Tips" /><published>2016-03-15T19:14:32+01:00</published><updated>2016-03-15T19:14:32+01:00</updated><id>https://blog.eucalypto.de/2016/03/15/centos</id><content type="html" xml:base="https://blog.eucalypto.de/2016/03/15/centos.html">&lt;h2 id=&quot;manage-additional-repositories&quot;&gt;Manage additional Repositories&lt;/h2&gt;

&lt;p&gt;For CentOS 7 there exist additional repositories; for additional codecs for example. This &lt;a href=&quot;https://wiki.centos.org/AdditionalResources/Repositories&quot;&gt;website&lt;/a&gt; lists the most useful ones. I use the Nux-Dextop repository but I don’t want to have it turned on the whole time.&lt;/p&gt;

&lt;p&gt;So I use&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo yum-config-manager --enable nux-dextop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;to enable this repo. And when I’m done installing or updating with
&lt;code class=&quot;highlighter-rouge&quot;&gt;yum&lt;/code&gt;, I use&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo yum-config-manager --disable nux-dextop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;to disable this repo again.&lt;/p&gt;

&lt;p&gt;And with &lt;code class=&quot;highlighter-rouge&quot;&gt;yum repolist&lt;/code&gt; you can see which repositories are currently
enabled.&lt;/p&gt;

&lt;h2 id=&quot;git-server&quot;&gt;Git Server&lt;/h2&gt;

&lt;p&gt;To have a git server you just have to install &lt;code class=&quot;highlighter-rouge&quot;&gt;git-daemon&lt;/code&gt;. Now you can
use the computer as git server with ssh.&lt;/p&gt;

&lt;h2 id=&quot;lighttpd&quot;&gt;Lighttpd&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.liberiangeek.net/2014/09/install-lighttpd-webserver-centos-7-php5-mariadb-support/&quot;&gt;Lighttpd&lt;/a&gt;
is a light web server. In CentOS its package is in the
&lt;a href=&quot;https://wiki.centos.org/de/AdditionalResources/Repositories/&quot;&gt;EPEL&lt;/a&gt;
repository. After installing this package you can run it with bash:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl start lighttpd.service&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;CentOS ships with a firewall. We have to
&lt;a href=&quot;http://dokuwiki.nausch.org/doku.php/centos:web_c7:apache_1&quot;&gt;configure&lt;/a&gt; it
so that our server is accessible from outside:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;firewall-cmd &lt;span class=&quot;nt&quot;&gt;--permanent&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--zone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;public &lt;span class=&quot;nt&quot;&gt;--add-service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;firewall-cmd &lt;span class=&quot;nt&quot;&gt;--permanent&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--zone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;public &lt;span class=&quot;nt&quot;&gt;--add-service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;https&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;During the installation of Lighttpd, a new user is created: “lighttpd”.
This is the same as “www-data” for apache. To find out where the
document root of the server is supposed to be, have a look at
&lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/passwd&lt;/code&gt;. There you will find the “home” directory of “lighttpd”:
&lt;code class=&quot;highlighter-rouge&quot;&gt;/var/www/lighttpd&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now open &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/lighttpd/lighttpd.conf&lt;/code&gt; and check if the document
directory is in the right place:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var.server_root = &quot;/var/www&quot;
[...]
server.document-root = server_root + &quot;/lighttpd&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;baikal&quot;&gt;Baikal&lt;/h2&gt;

&lt;p&gt;Baikal is a php based CalDav and CardDav server. It uses SQLite as
database. So you need to make sure the following programs are installed:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;SQLite&lt;/li&gt;
  &lt;li&gt;PHP (&amp;gt;5.3)&lt;/li&gt;
  &lt;li&gt;Some webserver (e.g. apache &lt;code class=&quot;highlighter-rouge&quot;&gt;httpd.x86_64&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;lighttpd&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;</content><author><name>eucalypto</name></author><category term="linux" /><category term="centos" /><summary type="html">Manage additional Repositories</summary></entry><entry><title type="html">Dropbox in CentOs 7</title><link href="https://blog.eucalypto.de/2016/03/15/dropbox-centos.html" rel="alternate" type="text/html" title="Dropbox in CentOs 7" /><published>2016-03-15T19:14:32+01:00</published><updated>2016-03-15T19:14:32+01:00</updated><id>https://blog.eucalypto.de/2016/03/15/dropbox-centos</id><content type="html" xml:base="https://blog.eucalypto.de/2016/03/15/dropbox-centos.html">&lt;h2 id=&quot;install-dropbox-in-centos-7&quot;&gt;Install Dropbox in CentOS 7&lt;/h2&gt;

&lt;p&gt;This &lt;a href=&quot;http://computechtips.com/790/install-dropbox-centos-7&quot;&gt;website&lt;/a&gt; has a nice overview over the installation process. First, you need to&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;yum &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;libgnome&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;and then download the Dropbox Fedora (.rpm) package from &lt;a href=&quot;https://www.dropbox.com/install?os=lnx&quot;&gt;Dropbox&lt;/a&gt; and install it with&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;rpm &lt;span class=&quot;nt&quot;&gt;-ivh&lt;/span&gt; nautilus-dropbox[...].rpm&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then you can start Dropbox and log in with your accound details.&lt;/p&gt;

&lt;h2 id=&quot;repair-package-manager-yum&quot;&gt;Repair package manager yum&lt;/h2&gt;

&lt;p&gt;If you use yum (e.g &lt;code class=&quot;highlighter-rouge&quot;&gt;yum update&lt;/code&gt;) after Dropbox installation, you will
probably encounter an error that a certain .xml file could not be found.
This &lt;a href=&quot;http://software-engineer.gatsbylee.com/dropbox-yum-update-error-on-centos/&quot;&gt;blog entry&lt;/a&gt; describes the problem:&lt;/p&gt;

&lt;p&gt;The Package is made for Fedora and Fedora has a different release cycle
than CentOS. But the package repository configuration of Dropbox
&lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/yum.repos.d/dropbox.repo&lt;/code&gt; uses the variable &lt;code class=&quot;highlighter-rouge&quot;&gt;$releasever&lt;/code&gt;, which
is different for Fedora and CentOS.&lt;/p&gt;

&lt;p&gt;To solve this problem you have to replace the line&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;baseurl=http://linux.dropbox.com/fedora/$releasever/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;with&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;baseurl=http://linux.dropbox.com/fedora/21/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The number &lt;code class=&quot;highlighter-rouge&quot;&gt;21&lt;/code&gt; is just the newest Fedora version supported by Dropbox.
Yo can look for the current supported versions on &lt;a href=&quot;https://linux.dropbox.com/fedora/&quot;&gt;their website&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;run-dropbox-as-a-service&quot;&gt;Run Dropbox as a service&lt;/h2&gt;

&lt;p&gt;In order to have Dropbox available right after boot without loggin in,
it has to be declared a service.&lt;/p&gt;

&lt;p&gt;[TODO] Find out how?&lt;/p&gt;</content><author><name>eucalypto</name></author><category term="linux" /><category term="centos" /><category term="dropbox" /><summary type="html">Install Dropbox in CentOS 7</summary></entry><entry><title type="html">Bash Aliases</title><link href="https://blog.eucalypto.de/2016/03/11/bashrc-aliases.html" rel="alternate" type="text/html" title="Bash Aliases" /><published>2016-03-11T18:44:10+01:00</published><updated>2016-03-11T18:44:10+01:00</updated><id>https://blog.eucalypto.de/2016/03/11/bashrc-aliases</id><content type="html" xml:base="https://blog.eucalypto.de/2016/03/11/bashrc-aliases.html">&lt;h2 id=&quot;aliases-for-command-line-in-bashrc&quot;&gt;Aliases for command line in .bashrc&lt;/h2&gt;

&lt;p&gt;In ubuntu the &lt;code class=&quot;highlighter-rouge&quot;&gt;.bashrc&lt;/code&gt; file has a command that looks for
&lt;code class=&quot;highlighter-rouge&quot;&gt;~/.bash_aliases&lt;/code&gt; and includes it. Here you find my &lt;a href=&quot;https://raw.githubusercontent.com/eucalypto/potato/master/helpful_potato/linux/bash/dot.bash_aliases&quot;&gt;.bash_aliases&lt;/a&gt; file with useful aliases.&lt;/p&gt;

&lt;p&gt;This is the code in the .bashrc file:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Alias definitions.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# You may want to put all your additions into a separate file like&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# ~/.bash_aliases, instead of adding them here directly.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# See /usr/share/doc/bash-doc/examples in the bash-doc package.&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; ~/.bash_aliases &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; ~/.bash_aliases
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name>eucalypto</name></author><category term="linux" /><category term="bash" /><summary type="html">Aliases for command line in .bashrc</summary></entry><entry><title type="html">Git Tips</title><link href="https://blog.eucalypto.de/2015/04/27/git-tips.html" rel="alternate" type="text/html" title="Git Tips" /><published>2015-04-27T03:36:00+02:00</published><updated>2015-04-27T03:36:00+02:00</updated><id>https://blog.eucalypto.de/2015/04/27/git-tips</id><content type="html" xml:base="https://blog.eucalypto.de/2015/04/27/git-tips.html">&lt;p&gt;If you work with any kind of text files, a version control program is
your best friend. And Git is probably the best.&lt;/p&gt;

&lt;p&gt;The easiest way to learn git is &lt;a href=&quot;https://try.github.io&quot;&gt;tutorial&lt;/a&gt;. All other git commands you will learn by googling for them when in need.&lt;/p&gt;

&lt;p&gt;If you want to share your code in an open source way, &lt;a href=&quot;https://github.com/&quot;&gt;Github&lt;/a&gt; is nowadays the top choice. They also helped with the tutorial above.&lt;/p&gt;

&lt;h2 id=&quot;work-on-several-branches-simultaneously&quot;&gt;Work on several branches simultaneously&lt;/h2&gt;

&lt;p&gt;In newer versions of git (2.5+), you can open a branch of your local repository
into a separate path without cloning the repo. &lt;a href=&quot;http://stackoverflow.com/questions/6270193/multiple-working-directories-with-git/30185564#30185564&quot;&gt;Stackoverflow&lt;/a&gt; knows more.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git worktree add path/to/separate/folder [branch-name]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The only limitation is that you cannot check out the same branch twice. But now
you can work on several branches without having to switch between them. And,
since they all originate from one repository, you can push them with one
command.&lt;/p&gt;

&lt;h2 id=&quot;compare-all-local-branches-with-remote&quot;&gt;Compare all local branches with remote&lt;/h2&gt;

&lt;p&gt;If you use more than one branch in git, you may want to keep them also
backed up in a remote repository. And to keep track of all branches and
their relation to the remote ones, there are commands like&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git fetch &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt;
git branch &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Linux users may be familiar with this flag &lt;code class=&quot;highlighter-rouge&quot;&gt;-v&lt;/code&gt;, which stands for
&lt;code class=&quot;highlighter-rouge&quot;&gt;verbose&lt;/code&gt;, for many programs. Also here, it makes git list all branches
and their status compared to remote.&lt;/p&gt;

&lt;h2 id=&quot;change-the-url-path-of-origin&quot;&gt;Change the url (path) of origin&lt;/h2&gt;

&lt;p&gt;With&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git remote &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;you can check what the current url (path) to your remotes are. Now to
&lt;a href=&quot;https://help.github.com/articles/changing-a-remote-s-url/&quot;&gt;change&lt;/a&gt;
(update) the url just use&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git remote set-url origin https://new.git.repo.url&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;make-branch-track-remote-branch&quot;&gt;Make branch track remote branch&lt;/h2&gt;

&lt;p&gt;If you create a new branch locally and want to push it to origin, use&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git push &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; origin branch-name&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;to push it and set the local branch to
&lt;a href=&quot;http://stackoverflow.com/questions/520650/make-an-existing-git-branch-track-a-remote-branch/2286030#2286030&quot;&gt;track&lt;/a&gt;
its remote copy.&lt;/p&gt;

&lt;p&gt;If you forgot to do this, you can use&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git branch &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; origin/branch-name&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;to start tracking after a push.&lt;/p&gt;

&lt;h2 id=&quot;manage-several-remotes&quot;&gt;Manage several remotes&lt;/h2&gt;

&lt;h3 id=&quot;checking-out-remote-branches&quot;&gt;Checking out remote branches&lt;/h3&gt;

&lt;p&gt;Having several remotes as backup may be a good idea. Let’s say you want to check
out a new (remote) branch. If you have several remotes, then doing&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git fetch
git checkout branchname&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;doesn’t&lt;/em&gt; work. You need to do&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git checkout &lt;span class=&quot;nt&quot;&gt;-b&lt;/span&gt; branchname remote-name/branchname&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;according to &lt;a href=&quot;http://stackoverflow.com/questions/1783405/how-to-check-out-a-remote-git-branch&quot;&gt;stackoverflow&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;push-to-several-remotes&quot;&gt;Push to several remotes&lt;/h3&gt;

&lt;p&gt;Now that we have several remotes, we want to keep them up to date. But pushing
each one separately is too much work!
&lt;a href=&quot;http://stackoverflow.com/questions/14290113/git-pushing-code-to-two-remotes&quot;&gt;Stackoverflow&lt;/a&gt;
suggests to create a new remote and add extra push urls:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git remote add all git://repo1.url
git remote set-url &lt;span class=&quot;nt&quot;&gt;--add&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--push&lt;/span&gt; all git://repo2.url&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Unfortunately the last command overwrites the original url for pushing; so we
have to add it back with&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git remote set-url &lt;span class=&quot;nt&quot;&gt;--add&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--push&lt;/span&gt; all git://repo1.url&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now, we can use the remote &lt;code class=&quot;highlighter-rouge&quot;&gt;all&lt;/code&gt; as the new remote repository that our branches
track. &lt;code class=&quot;highlighter-rouge&quot;&gt;Push{nbsp}all&lt;/code&gt; pushes to all repositories, but &lt;code class=&quot;highlighter-rouge&quot;&gt;pull&lt;/code&gt; only fetches the
first repository.&lt;/p&gt;

&lt;h2 id=&quot;recover-lost-files-discard-changes&quot;&gt;Recover lost files (discard changes)&lt;/h2&gt;

&lt;p&gt;The more I use git the more I love it! One of the nicest features of git is that
you can undo changes – including deletion of files. I wanted to remove some
files and accidentally typed: &lt;code class=&quot;highlighter-rouge&quot;&gt;rm{nbsp}something{nbsp}\*&lt;/code&gt;, whereas I wanted
&lt;code class=&quot;highlighter-rouge&quot;&gt;rm{nbsp}something*&lt;/code&gt;. But of course bash didn’t know that and merrily deleted
everything in my directory (except a folder).&lt;/p&gt;

&lt;p&gt;But as always, git
&lt;a href=&quot;http://stackoverflow.com/questions/52704/how-do-you-discard-unstaged-changes-in-git&quot;&gt;saves the day&lt;/a&gt;. With&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git checkout &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; /path/to/file&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;you can discard any changes on this file. Including deletion.&lt;/p&gt;

&lt;p&gt;If you want to do this for every file in the current directory, type:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git checkout &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; .&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The dot is important.&lt;/p&gt;

&lt;h2 id=&quot;copy-checkout-files-from-other-branches&quot;&gt;Copy (checkout) files from other branches&lt;/h2&gt;

&lt;p&gt;Sometimes you want to
http://nicolasgallagher.com/git-checkout-specific-files-from-another-branch/[fetch
some files] from another branch. But you don’t want to check out the
whole branch; just copy some files from it.&lt;/p&gt;

&lt;p&gt;Git can do this already:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git checkout other_branch &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; path/to/files/&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Just use &lt;code class=&quot;highlighter-rouge&quot;&gt;--&lt;/code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;git checkout&lt;/code&gt; and it just fetches those files while
staying in the current branch. Sweet!&lt;/p&gt;

&lt;h2 id=&quot;combine-squash-commits&quot;&gt;Combine (squash) commits&lt;/h2&gt;

&lt;p&gt;If you want to
&lt;a href=&quot;http://stackoverflow.com/questions/5189560/squash-my-last-x-commits-together-using-git/5201642#5201642&quot;&gt;combine&lt;/a&gt;
the last few commits into one, you can use&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git reset &lt;span class=&quot;nt&quot;&gt;--soft&lt;/span&gt; HEAD~3&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;to go back to the third commit before HEAD. With the &lt;code class=&quot;highlighter-rouge&quot;&gt;--soft&lt;/code&gt; option,
you keep all files and changes from current working directory.&lt;/p&gt;

&lt;p&gt;Now you can commit those changes with one commit!&lt;/p&gt;

&lt;h2 id=&quot;extract-subtrees&quot;&gt;Extract Subtrees&lt;/h2&gt;

&lt;p&gt;If your project becomes large or if you are like me and have a git
repository for many things, you may want to extract a part of it and
keep the commits.&lt;/p&gt;

&lt;p&gt;Git gives you a history of a certain file with&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git log -- special.file
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But git can also
&lt;a href=&quot;https://ariya.io/2014/07/extracting-parts-of-git-repository-and-keeping-the-history&quot;&gt;extract&lt;/a&gt; the history of a sub-folder into a separate branch:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git-subtree split --prefix=path/to/subfolder --branch=new-branch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But this works only with sub-folders. So my tips are&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;keep separate stuff in separate folders&lt;/li&gt;
  &lt;li&gt;split up large commits that change separate parts&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="git" /><category term="code" /><summary type="html">If you work with any kind of text files, a version control program is your best friend. And Git is probably the best.</summary></entry><entry><title type="html">PDF-Tools</title><link href="https://blog.eucalypto.de/2013/04/14/pdf-tools.html" rel="alternate" type="text/html" title="PDF-Tools" /><published>2013-04-14T20:14:32+02:00</published><updated>2013-04-14T20:14:32+02:00</updated><id>https://blog.eucalypto.de/2013/04/14/pdf-tools</id><content type="html" xml:base="https://blog.eucalypto.de/2013/04/14/pdf-tools.html">&lt;p&gt;PDFs are a fine thing. But sometimes we want to edit them. Mostly for
printing.&lt;/p&gt;

&lt;h2 id=&quot;pdfjam&quot;&gt;Pdfjam&lt;/h2&gt;

&lt;p&gt;This command-line tool named  &lt;a href=&quot;http://wiki.ubuntuusers.de/PDFjam&quot;&gt;pdfjam&lt;/a&gt;
uses latex to edit PDFs. It should be available in the repositories of
most Linux distros. There are also
&lt;a href=&quot;http://www2.warwick.ac.uk/fac/sci/statistics/staff/academic-research/firth/software/pdfjam/&quot;&gt;useful examples&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;You can offset&lt;/em&gt; pages of a (twosided) document in order to make room for a binding, etc.:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pdfjam --twoside myfile.pdf --offset '1cm 0cm' --suffix 'offset'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This doesn’t scale, it just shifts the content.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;You can even&lt;/em&gt; use pdfjam to produce PDFs with two pages per page:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pdfjam myfile.pdf --trim '1cm 2cm 1cm 2cm' --clip true --outfile /dev/stdout | \
pdfjam --nup 2x1 --landscape --frame true --outfile myoutput.pdf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This cuts the four sides of the document and puts two sides on one.&lt;/p&gt;

&lt;h2 id=&quot;getting-rid-of-margins&quot;&gt;Getting rid of Margins&lt;/h2&gt;

&lt;p&gt;If you want to print large documents two-sided, large margins will
produce small text.&lt;/p&gt;

&lt;h3 id=&quot;pdfcrop&quot;&gt;Pdfcrop&lt;/h3&gt;

&lt;p&gt;On Linux (Ubuntu) there is a nice command line tool called
&lt;a href=&quot;http://manpages.ubuntu.com/manpages/gutsy/man1/pdfcrop.1.html&quot;&gt;pdfcrop&lt;/a&gt;.
Several examples are given
&lt;a href=&quot;http://askubuntu.com/questions/124692/command-line-tool-to-crop-pdf-files&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It removes all white margins of pdfs:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pdfcrop --margins '5 10 20 30' input.pdf output.pdf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Without the &lt;code class=&quot;highlighter-rouge&quot;&gt;--margins&lt;/code&gt; flag, pdfcrop would produce zero margins, which
might look awkward.&lt;/p&gt;

&lt;h3 id=&quot;pdfscissors&quot;&gt;Pdfscissors&lt;/h3&gt;

&lt;p&gt;There is also a nice Java tool with a GUI:
&lt;a href=&quot;https://sites.google.com/site/pdfscissors/&quot;&gt;pdfscissors&lt;/a&gt;. It shows you
all pages of a document half-transparent stacked so that you can select
what to cut on all pages simultaneously.&lt;/p&gt;

&lt;h2 id=&quot;pdftk&quot;&gt;Pdftk&lt;/h2&gt;

&lt;p&gt;There is also the capable command-line tool called
&lt;a href=&quot;https://wiki.ubuntuusers.de/pdftk&quot;&gt;pdftk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><category term="pdf" /><summary type="html">PDFs are a fine thing. But sometimes we want to edit them. Mostly for printing.</summary></entry></feed>